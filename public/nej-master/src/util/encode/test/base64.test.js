var f=function(){module("base64");var t=NEJ.P("nej.u");test("base64编码解码",function(){var e=["a","null","function","error","return","switch","if","!0","UNdefined","NULL","Function","ERROR","return 1"];stop();for(var r=0;r<e.length;r++){var s=e[r],n=t._$str2b64(s),a=t._$b642str(n);equal(s,a,"编码，反编码，结果一致"),start()}}),test("base64中文编码解码",function(){var e=["中文","中文 空格","中文　全角空格"];stop();for(var r=0;r<e.length;r++){var s=e[r],n=t._$str2b64(s),a=t._$b642str(n);equal(s,a,"中文编码，反编码，结果一致"),start()}}),test("base64带特殊符号编码解码",function(){var e=[',:"\\[]{}'];stop();for(var r=0;r<e.length;r++){var s=e[r],n=t._$str2b64(s),a=t._$b642str(n);equal(s,a,"带特殊符号编码，反编码，结果一致"),start()}})};module("依赖模块"),test("define",function(){expect(0),define("{pro}base64.test.js",["{lib}util/encode/base64.js"],f)});