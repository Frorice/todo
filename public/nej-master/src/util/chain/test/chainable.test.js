var perfTest=function(e,t){var l=+new Date;t=t||0;for(var a=0;a<t;a++)e();console.log(+new Date-l)},f=function(){module("chainable");var e=NEJ.P,t=e("nej.e"),l=e("nej.u"),a=e("nej.v"),n=e("nej.$"),i=e("nej.x");test("NodeList initialize",function(){var e=(n("#chainable li:nth-child(2n+1)"),nes.all("#chainable li:nth-child(2n+1)").length);equal(n("#chainable li:nth-child(2n+1)").length,e,"数量与节点数量一致"),equal(n("").length,0,"可以传入不合法参数，返回空_NodeList对象"),equal(n(nes.all("#chainable"))[0],n("#chainable")[0],"可以直接传入节点数组"),equal(n(nes.one("#chainable"))[0],nes.one("#chainable"),"可以直接传入单节点");var t=n("#chainable");notEqual(t,n(t),"重新包装会返回新对象"),deepEqual(n("#chainable li:nth-child(2n+1)")._$get(),nes.all("#chainable li:nth-child(2n+1)"),"_$get返回真实数组"),deepEqual(n("#chainable li:nth-child(2n+1)")._$get(1),nes.all("#chainable li:nth-child(2n+1)")[1],"传入下标，_$get返回数组中的值"),ok(!Function.prototype.splitProcee,"原型修复splitProcess"),ok(!Function.prototype.autoSet,"原型修复autoSet")}),test("NodeList implement",function(){var e=function(){return"fn1"},a=function(){return"fn2"},i=function(){return"fn3"};n._$implement({_$test1:e}),deepEqual(n()._$test1,e),n._$implement({fn2:a,fn3:i}),deepEqual(n().fn2,a,"也可以传入对象数组");var c=function(e){return t._$setStyle(e,"height","40px"),t},r=function(e){return 20};n._$implement("sfn1",c,{statics:!0}),n._$implement("sfn2",r,{statics:!0});var h=n("#chainable li");equal(h.sfn1(),h,"set型方法可链式");var o=!1;l._$forEach(h,function(e){"40px"!==t._$getStyle(e,"height")&&(o=!0)}),ok(o===!1,"所有的节点都被影响了"),equal(h.sfn2(),20,"get型方法不可链式，且有返回值")}),module("NEJ 方法merge"),test("_$style 和 _$attr",function(){$style=n("#nej .style"),$attr=n("#nej .attr"),$style._$style("width","80px"),equal($style._$style("width"),"80px","style get与set down"),$style._$style({height:"80px",width:"40px",backgroundColor:"#ccc"}),deepEqual($style._$style(["height","width"]),{height:"80px",width:"40px"},"style 多重getter与setter down"),$attr._$attr("title","haha"),equal($attr._$attr("title"),"haha","attr get与set down"),$attr._$attr({title:"title",rel:"link"}),deepEqual($attr._$attr(["title","rel"]),{title:"title",rel:"link"},"attr 多重getter与setter down")}),test("nej方法merge",function(){i._$title=function(e,t){return t?void(e.title=t):e.title},i.isChange=!0,n("body,div")._$title("haha"),equal(n("body,div")._$title(),"haha","get"),n("body,div")._$title("haha2"),equal(n("body,div")._$title(),"haha2","setter")}),module("Base:过滤、逻辑"),test("_$fiter、_$map、_$forEach",function(){deepEqual(nes.all("#chainable li:nth-child(even)"),n("#chainable li")._$filter(":nth-child(even)")._$get(),"fitler 可传入 选择器");var e=n("#chainable li")._$filter(function(e,t){return t%2===0})._$get();deepEqual(nes.all("#chainable li:nth-child(odd)"),e,"fitler 可以传入 函数");n("#chainable li")._$map(function(e){return e});deepEqual(nes.all("#chainable li:nth-child(odd)"),e,"fitler 可以传入 函数")}),module("节点遍历"),test("_$prev、_$next、_$parent、_$children ",function(){var e=n("#chainable li")._$next(":nth-child(odd)",!0)._$get();deepEqual(e,nes.all("#chainable li ~ :nth-child(odd)"),"_$next all 成功返回");var e=n("#chainable-footer")._$prev(!0)._$get();n._$uniqueSort(e),deepEqual(e,nes.all("#chainable-header, #chainable-body"),"_$prev all 成功返回");var e=n("#chainable-footer")._$prev()._$get();deepEqual(e,nes.all("#chainable-body"),"_$prev single 成功返回");var e=n("#chainable-header")._$next(!0)._$get();deepEqual(e,nes.all("#chainable-body, #chainable-footer"),"_$next all 成功返回");var e=n("#chainable-header")._$next()._$get();deepEqual(e,nes.all("#chainable-body"),"_$next single 成功返回");var t=n("#chainable li")._$parent("ul",!0)._$get();deepEqual(t,nes.all("#chainable ul"),"_$parent all 成功返回");var t=n("#chainable li")._$parent("ul,div",!0)._$sort()._$get();deepEqual(t,nes.all("#chainable ul, #chainable, #chainable-header"),"_$parent all 成功返回");var t=n("#chainable li")._$parent("ul, div")._$get(),l=n("#chainable li:last-child")._$siblings("li")._$sort()._$get();deepEqual(l,nes.all("#chainable li:not(:last-child)"),"siblings会选择所有满足选择器的兄弟节点(但不包括li)");var a=n("#chain2")._$children("ul")._$get();deepEqual(a,nes.all("#chain2 > ul"),"可以取到直接子节点");var a=n("#chain2")._$children("li:first-child")._$get();deepEqual(a,[],"不会查找非直接子节点");var a=n("#chain2")._$children("li:first-child",!0)._$get();deepEqual(a,nes.all("li:first-child",nes.one("#chain2")))}),module("事件Event"),test("Events: base _$on, $off, $trigger",function(){var e={0:0},t=function(t){e[0]++},l=n("#chain2"),i=n._$uid(l[0]);a._$addEvent(l[0],"click",t),equal(n._delegateHandlers[i],void 0,"不使用事件代理，不会保存handler"),a._$dispatchEvent(l[0],"click",{}),equal(e[0],1,"被正确触发"),l._$trigger("click"),equal(e[0],2,"被正确触发"),l._$off("click",t),l._$trigger("click"),equal(e[0],2,"不再被触发，因为已经解除绑定");var c=e[0];l._$on(["click","mouseover","mouseout"],t),l._$trigger(["click","mouseover"]),equal(e[0],c+2,"可以使用数组绑定多个事件, 并且可以trigger多个事件");var c=e[0];l._$off(["click","mouseover"]),l._$trigger(["click","mouseover"]),equal(e[0],c,"click, mouseover, 无法触发因为都被解绑了"),l._$trigger("mouseout",{hello:1}),equal(e[0],c+1,"mouseout仍然存"),l._$off(),l._$trigger(["mouseout","click","mouseover"]),equal(e[0],c+1,"所有事件都被取消");var c=e[0],r=function(t){e[0]+=t.step||1};l._$on(["mouseout","click","mouseover"],r),l._$trigger("mouseout",{step:2}),equal(e[0],c+2,"简单参数传入");var c=e[0];l._$trigger({mouseout:{step:3},mouseover:{step:2}}),equal(e[0],c+5,"多重trigger并传入参数");var c=e[0];l._$trigger(["mouseout","click"],{step:3}),equal(e[0],c+6,"多个trigger并传入同一个参数")}),test("_event fixtue",function(){$node=n("#event-fixture"),$node._$on("click",function(e){ok(e.__fixed,"有__fixed标示说明被patch")}),$node._$trigger("click",{hello:1})}),module("节点操作"),test("节点操作:_$clone等",function(){var e=n("#mani"),t=e._$clone();notEqual(n._$uid(e[0]),n._$uid(t[0]),"节点标示会被重新设置"),ok(!t[0].getAttribute("id"),"节点ID被清空"),equal(t[0].innerHTML,"","不会复制子节点");var l=e._$clone(!0),a=l._$children("dl");notEqual(n._$uid(e[0]),n._$uid(t[0]),"节点标示会被重新设置"),ok(!!a,"会复制子节点"),ok(!a[0].getAttribute("id"),"子节点ID也被清空")}),test("属性操作",function(){var e=n("#html-text .content");equal(e._$text("haha"),e,"$text可链式"),equal(e._$text(),"haha","可取得textContent值"),equal(e._$last(!0)._$text(),"haha","多个节点也可以赋值"),equal(e._$html("haha"),e,"$html"),equal(e._$html(),"haha","可取得"),equal(e._$last(!0)._$html(),"haha","_$html多个节点也可以赋值");var t=n("#html-text")._$children("input,textarea");equal(t._$val("haha"),t,"$val可链式"),equal(t._$val(),"haha","可取得value"),equal(t._$last(!0)._$val(),"haha","多个节点也可以赋值")}),module("链式操作"),test("基本操作:UI",function(){deepEqual(n("#chainable li:nth-child(odd)")._$style({background:"#cca",cursor:"pointer"})._$next(":nth-child(2n)")._$style({background:"#a19",cursor:"help"})._$filter(":nth-child(4n)")._$on("click",function(e){n(this)._$style("background","#111")})._$get(1,!0)._$style("border","3px solid #222")._$parent("div#chainable")._$style({width:"800px",left:"300px",position:"absolute"})._$on({click:function(){var e=document.createElement("div");e.innerHTML="haha插入一行",n(this)._$insert(e,"bottom")},"mouseover li:nth-child(odd)":function(e){e.preventDefault(),e.__fixed||alert("delegate event object not fixed"),this._isLight=!this._isLight,n(this)._$style("background-color",this._isLight?"#cca":"#331")},"click li:nth-child(odd)":function(e){alert("_e")}})._$off("click li:nth-child(odd)")._$style(["width","left"]),{width:"800px",left:"300px"}," 链式操作成功，并且getter返回值成功"),n("li")._$on("contextmenu",function(e){alert(e.which),alert("contextmenu")})})};define("{pro}chainable.test.js",["{lib}util/chain/chainable.js"],f);