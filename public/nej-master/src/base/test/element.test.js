var f=function(){module("element");var e=NEJ.P("nej.p"),t=NEJ.P("nej.e");NEJ.P("nej.v");test("判断平台",function(){equal(typeof e._$KERNEL,"object","浏览器是"+e._$KERNEL.browser+"----前缀是"+e._$KERNEL.prefix.css+"----scc3d="+e._$SUPPORT.css3d)}),test("xml2object",function(){var e='<?xml version="1.0" encoding="UTF-8"?><netease><albums>    <code>1</code>    <album>        <id>198114001</id>        <name></name>        <desc></desc>        <auth>2</auth>        <privacy>2</privacy>        <count>110</count>        <tcover>4/zxeW5iOfq3ppXe1etviJwg==/611645124409898904.jpg</tcover>        <coverurl>1/_0CvRVkR39uuLIIEHVSAJQ==/1278740819214249961.jpg</coverurl>        <coverurl160>5/eoc7HI1101yikVJnzbBADg==/3082713944952843165.jpg</coverurl160>    </album></albums></netease>';equal(t._$xml2object(e).netease.albums.album.auth,"2","XML转对象")}),QUnit.test("textarea光标测试",function(){QUnit.stop();var e=t._$get("cursor-area");setTimeout(function(){equal(t._$cursor(e),{start:100,end:2e3},"请人工检查光标起始位置和结束位置"),QUnit.start()},2e3)}),QUnit.test("fullScreen测试",function(){QUnit.stop();var e=t._$get("full-div");setTimeout(function(){t._$fullScreen(e),equal(e.style.width,document.body.offsetWidth+"px","节点占全屏"),QUnit.start()},3e3)}),test("element",function(){var e=document.getElementById("js-node");t._$setStyle(e,"z-index",888),equal(t._$getStyle(e,"z-index"),888,"设置z-index样式"),equal(t._$get("js-node"),e,"取节点对象，通过ID"),equal(t._$get(e),e,"取节点对象，通过对象"),equal(typeof t._$id(e),"string","为节点设置一个唯一的ID"),equal(t._$getSibling("ele").id,"cursor-area","根据从兄弟节点中搜索符合条件的节点"),equal(t._$getChildren(e)[0].innerHTML,"node","取节点的子节点列表"),equal(t._$getChildren(e,"node2")[0].innerHTML,"node2","根据样式标识取子节点列表"),equal(t._$getByClassName(document,"node")[0],e,"根据类名取节点列表"),equal(t._$create("div","js-div",document.body),t._$getByClassName(document,"js-div")[0],"创建一个节点"),stop();var a=t._$createXFrame({src:"http://www.baidu.com",name:"百度",parent:"frameCnt",visible:!1,onload:function(){ok(!0,"框架载入成功"),equal(a.name,"百度","name设置"),equal(a.style.display,"none","visible设置"),start()}}),l=t._$id(t._$getByClassName(document,"js-div")[0]),o=t._$get(l),r=t._$get("css3d");t._$css3d(r,"translate",{x:"100px",y:"20px",z:"30px"}),equal(r.style["-webkit-transform"],"translate3d(100px, 20px, 30px)","设置translate3d属性,仅safari和chrome支持"),t._$css3d(r,"translate",{x:"100px",y:"20px",z:"40px"}),equal(r.style["-webkit-transform"],"translate3d(100px, 20px, 40px)","重新设置translate3d属性,仅safari和chrome支持"),t._$css3d(r,"scale",{x:1,y:2,z:2}),equal(r.style["-webkit-transform"],"scale3d(1, 2, 2)","设置scale3d属性,仅safari和chrome支持"),t._$css3d(r,"scale",{x:2,y:3,z:3}),equal(r.style["-webkit-transform"],"scale3d(2, 3, 3)","重新设置scale3d属性,仅safari和chrome支持"),t._$css3d(r,"rotate",{x:1,y:2,z:2,a:"45deg"}),equal(r.style["-webkit-transform"],"rotate3d(1, 2, 2, 45deg)","设置rotate3d属性,仅safari和chrome支持"),t._$css3d(r,"rotate",{x:2,y:1,z:1,a:"-75deg"}),equal(r.style["-webkit-transform"],"rotate3d(2, 1, 1, -75deg)","重新设置rotate3d属性,仅safari和chrome支持"),t._$style(r,{color:"red",background:"black"}),equal(r.style.color,"red","通过_$style设置样式"),equal(t._$getStyle(r,"color"),"rgb(255, 0, 0)","去节点的color样式");t._$matrix("matrix(1,0,0,1,0,0)");t._$remove(o,!0),equal(t._$get(l),null,"删除节点，是否在删除节点前移除事件，要测试v._$clearEvent(_element)接口");var o=t._$create("div","js-div",document.body);o.innerText="hello",t._$removeByEC(o),equal(t._$getByClassName(document,"js-div").length,0,"节点移除到内存中");var o=t._$create("div","js-div",document.body),n=t._$dataset(o,"img","就是一个值");equal(n,"就是一个值","给对象设置属性值");var s='<div id="abc">xxxx</div>',d=t._$text2type(s,"xml");equal(typeof d,"object","text2type");var s='{"a":"b"}',d=t._$text2type(s,"json");propEqual(d,{a:"b"},"text2type");var o=t._$html2node('<div id="testnode"><img src="" /></div>');equal(o.id,"testnode","html代码转节点对象");var o=t._$html2node('<div id="testnode"></div><div id="testnode1"></div><div id="testnode2"></div>');equal(t._$getChildren(o).length,3,"html代码转节点对象"),t._$pushCSSText(".css3d{width:300px;}"),equal(r.style.width,"","未激活样式"),t._$dumpCSSText(),equal(r.offsetWidth,300,"激活样式");var i=t._$getPageBox();equal(typeof i.scrollTop,"number","取盒子的信息"),equal(typeof i.scrollLeft,"number","取盒子的信息"),equal(typeof i.clientWidth,"number","取盒子的信息"),equal(typeof i.clientHeight,"number","取盒子的信息"),equal(typeof i.scrollWidth,"number","取盒子的信息"),equal(typeof i.scrollHeight,"number","取盒子的信息"),notEqual(i.scrollTop,NaN,"取盒子的信息"),notEqual(i.scrollLeft,NaN,"取盒子的信息"),notEqual(i.clientWidth,NaN,"取盒子的信息"),notEqual(i.clientHeight,NaN,"取盒子的信息"),notEqual(i.scrollWidth,NaN,"取盒子的信息"),notEqual(i.scrollHeight,NaN,"取盒子的信息");var c={width:100,height:10},u=t._$getMaxBox({width:250,height:10},c);propEqual(u,{width:100,height:4},"给定大小缩放至限制区域内");var u=t._$getMaxBox({width:100,height:50},c);propEqual(u,{width:20,height:10},"给定大小缩放至限制区域内");var _=t._$get("bottom");t._$scrollTo(_),notEqual(t._$getPageBox().scrollTop,0,"scrollTo指定节点"),notEqual(t._$getPageBox().scrollLeft,0,"scrollTo指定节点");var $=t._$align({width:200,height:200},{width:100,height:100});propEqual($,{top:50,left:50},"获取滚动视窗");var $=t._$align({width:200,height:200},{width:100,height:100},"left bottom");propEqual($,{top:100,left:0},"获取滚动视窗");var m=t._$getScrollViewPort(e);equal(typeof m,"object","获取滚动视窗"),equal(typeof t._$offset(e).x,"number","计算两个节点之间的偏移量"),equal(typeof t._$offset(e).y,"number","计算两个节点之间的偏移量"),notEqual(typeof t._$offset(e).x,NaN,"计算两个节点之间的偏移量"),notEqual(typeof t._$offset(e).y,NaN,"计算两个节点之间的偏移量");var f=t._$offset(t._$get("ele2"),t._$get("ele"));equal(f.x,10,"计算两个节点之间的偏移量，指定了2个节点"),t._$setStyle(e,"color","#f00"),equal(t._$getStyle(e,"color"),"rgb(255, 0, 0)","设置color样式"),t._$setStyle(e,"color2","red2"),equal(e.style.color2,"red2","非标准属性一样设置成功，但是节点上没有显示，设置样式"),equal(t._$getStyle(e,"color"),"rgb(255, 0, 0)","取样式值"),notEqual(t._$getStyle(e,"color"),"red","样式值跟存的不一样,取的时候按照标准属性"),equal(t._$getStyle(e,"color2"),"","非标准属性返回空字符串"),t._$addStyle("body{font-size:20px}"),equal(t._$getStyle(e,"fontSize"),"20px","添加样式"),t._$addScript('document.getElementById("js-node").style.color = "green"'),equal(t._$getStyle(e,"color"),"rgb(0, 128, 0)","脚本添加颜色"),t._$addClassName(e,"fc01 fc03"),equal(e.className,"node fc01 fc03","新增样式类，多个样式用空格分开"),t._$delClassName(e,"node"),equal(e.className,"fc01 fc03","删除样式类，多个样式用空格分开"),t._$replaceClassName(e,"fc01 fc03","node"),equal(e.className,"node","替换节点的样式类名称，多个样式用空格分隔"),t._$addClassName(e,"node"),equal(t._$hasClassName(e,"node"),!0,"检测节点是否包含指定样式，多个样式用空格分隔，检测时包含其中之一即表示包含"),equal(typeof t._$appendCSSText("style-id","#bottom{color:red;}"),"object","appendCSSText")}),QUnit.test("clearChildren",function(){var e=t._$get("ul");t._$clearChildren(e),equal(t._$getChildren(e).length,0,"子节点被清空了")}),QUnit.test("wrapInline",function(){var e=t._$get("js-node");equal(t._$wrapInline(e,{tag:"label",clazz:"label-class"}),0,"wrapInline-p")}),QUnit.test("attr",function(){var e=t._$attr("js-node","data-img","xxx");equal(e,"xxx","attr")}),QUnit.test("mask and unmask",function(){ok("没有做测试")})};module("依赖模块"),test("define",function(){expect(0),define("{pro}element.test.js",["{lib}base/element.js","{lib}util/encode/json.js"],f)});